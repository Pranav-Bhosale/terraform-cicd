
name: terraform-ci/cd

on:
  push:
    branch: "main"
  pull_request:
    branch: "main"


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Test
        run: |
          cd esop
          ./gradlew test

  build:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Build
        run: |
          cd esop
          ./gradlew build -x check
      - name: Copy jar file to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: esop-trading-1.0
          path: esop/build/libs/esop-0.1-all.jar

  create-infrastructure:
    needs: [build]
    runs-on: ubuntu-22.04
    outputs:
      public_ip: ${{steps.create-instance.outputs.ip}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
            terraform_wrapper: false
      - name: create backend
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd ./create-s3-bucket
          terraform init
          terraform apply -auto-approve
      - name: create-instance
        id: create-instance
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd ./create-instance
          terraform init
          echo ip=$(terraform apply -auto-approve | grep instance_public_ip | tr -d "instance_public_ip = " | tr -d \" |  cut -f1 -d ":"  | tr -d '\n') >> "$GITHUB_OUTPUT"
  deploy:
    needs: [create-infrastructure]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download jar
        uses: actions/download-artifact@v3
        with:
          name: esop-trading-1.0
      - name: Transfer artifact to EC2 instance
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST:  ${{needs.create-infrastructure.outputs.public_ip}}
        run: |
           echo "start"
           echo ${{needs.create-infrastructure.outputs.public_ip}}
           echo "end"
           eval `ssh-agent`
           ssh-add - <<< "${SSH_PRIVATE_KEY}"
          scp -o StrictHostKeyChecking=no "deploy.sh" ec2-user@$SSH_HOST:~
          scp -o StrictHostKeyChecking=no "esop-0.1-all.jar" ec2-user@$SSH_HOST:~
          ssh -o StrictHostKeyChecking=no ec2-user@$SSH_HOST -t "sudo yum install java-17-amazon-corretto-headless -y"
          ssh -o StrictHostKeyChecking=no ec2-user@$SSH_HOST -t "sudo ./deploy.sh"
